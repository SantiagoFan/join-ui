{"remainingRequest":"/media/santiago/projects/join-ui/node_modules/thread-loader/dist/cjs.js!/media/santiago/projects/join-ui/node_modules/babel-loader/lib/index.js!/media/santiago/projects/join-ui/node_modules/eslint-loader/index.js??ref--13-0!/media/santiago/projects/join-ui/packages/index.js","dependencies":[{"path":"/media/santiago/projects/join-ui/packages/index.js","mtime":1571197815945},{"path":"/media/santiago/projects/join-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\n\n/* eslint-disable */\n// This file is auto gererated by build/build-entry.js\nimport Btn from \"./Btn\";\nimport Qrcode from \"./qrcode\";\nvar version = '0.1.8'; // 存储组件列表\n\nvar components = [Btn, Qrcode]; // 定义 install 方法，接收 Vue 作为参数。如果使用 use 注册插件，则所有的组件都将被注册\n\nvar install = function install(Vue) {\n  // 判断是否安装\n  if (install.installed) return; // 遍历注册全局组件\n\n  components.forEach(function (Component) {\n    Vue.use(Component);\n  });\n};\n/* istanbul ignore if */\n// 判断是否是直接script引入文件\n\n\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nexport { // 导出的对象必须具有 install，才能被 Vue.use() 方法安装\ninstall, version, Btn, Qrcode };\nexport default {\n  install: install,\n  version: version\n};",{"version":3,"sources":["/media/santiago/projects/join-ui/packages/index.js"],"names":["Btn","Qrcode","version","components","install","Vue","installed","forEach","Component","use","window"],"mappings":";;AAAA;AACA;AACA,OAAOA,GAAP;AACA,OAAOC,MAAP;AACA,IAAMC,OAAO,GAAG,OAAhB,C,CACA;;AACA,IAAMC,UAAU,GAAG,CACjBH,GADiB,EAEjBC,MAFiB,CAAnB,C,CAIA;;AACA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAAAC,GAAG,EAAI;AACrB;AACA,MAAID,OAAO,CAACE,SAAZ,EAAuB,OAFF,CAGrB;;AACAH,EAAAA,UAAU,CAACI,OAAX,CAAmB,UAAAC,SAAS,EAAI;AAC9BH,IAAAA,GAAG,CAACI,GAAJ,CAAQD,SAAR;AACD,GAFD;AAGD,CAPD;AASA;AACA;;;AACA,IAAI,OAAOE,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACL,GAA5C,EAAiD;AAC/CD,EAAAA,OAAO,CAACM,MAAM,CAACL,GAAR,CAAP;AACD;;AACD,SACE;AACAD,OAFF,EAGEF,OAHF,EAIEF,GAJF,EAKEC,MALF;AAOA,eAAe;AACbG,EAAAA,OAAO,EAAPA,OADa;AAEbF,EAAAA,OAAO,EAAPA;AAFa,CAAf","sourcesContent":["/* eslint-disable */\n// This file is auto gererated by build/build-entry.js\nimport Btn from './Btn'\nimport Qrcode from './qrcode'\nconst version = '0.1.8'\n// 存储组件列表\nconst components = [\n  Btn,\n  Qrcode\n]\n// 定义 install 方法，接收 Vue 作为参数。如果使用 use 注册插件，则所有的组件都将被注册\nconst install = Vue => {\n  // 判断是否安装\n  if (install.installed) return\n  // 遍历注册全局组件\n  components.forEach(Component => {\n    Vue.use(Component)\n  })\n};\n\n/* istanbul ignore if */\n// 判断是否是直接script引入文件\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue)\n}\nexport {\n  // 导出的对象必须具有 install，才能被 Vue.use() 方法安装\n  install,\n  version,\n  Btn,\n  Qrcode\n}\nexport default {\n  install,\n  version\n}\n"]}]}