{"remainingRequest":"/media/santiago/projects/join-ui/node_modules/thread-loader/dist/cjs.js!/media/santiago/projects/join-ui/node_modules/babel-loader/lib/index.js!/media/santiago/projects/join-ui/node_modules/babel-loader/lib/index.js!/media/santiago/projects/join-ui/node_modules/eslint-loader/index.js??ref--13-0!/media/santiago/projects/join-ui/packages/index.js","dependencies":[{"path":"/media/santiago/projects/join-ui/packages/index.js","mtime":1570609452160},{"path":"/media/santiago/projects/join-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/web.dom.iterable\";\n/* eslint-disable */\n// This file is auto gererated by build/build-entry.js\n\nimport Btn from \"./Btn\";\nimport Qrcode from \"./qrcode\";\nvar version = '0.1.8'; // 存储组件列表\n\nvar components = [Btn, Qrcode]; // 定义 install 方法，接收 Vue 作为参数。如果使用 use 注册插件，则所有的组件都将被注册\n\nvar install = function install(Vue) {\n  // 判断是否安装\n  if (install.installed) return; // 遍历注册全局组件\n\n  components.forEach(function (Component) {\n    Vue.use(Component);\n  });\n};\n/* istanbul ignore if */\n// 判断是否是直接script引入文件\n\n\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue);\n}\n\nexport { // 导出的对象必须具有 install，才能被 Vue.use() 方法安装\ninstall, version, Btn, Qrcode };\nexport default {\n  install: install,\n  version: version\n};",{"version":3,"sources":["/media/santiago/projects/join-ui/packages/index.js"],"names":["version","components","install","Vue","window"],"mappings":";;AAAA;AACA;;AACA,OAAA,GAAA;AACA,OAAA,MAAA;AACA,IAAMA,OAAO,GAAb,OAAA,C,CACA;;AACA,IAAMC,UAAU,GAAG,CAAA,GAAA,EAAnB,MAAmB,CAAnB,C,CAIA;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAA,GAAA,EAAO;AACrB;AACA,MAAIA,OAAO,CAAX,SAAA,EAFqB,OAAA,CAGrB;;AACAD,EAAAA,UAAU,CAAVA,OAAAA,CAAmB,UAAA,SAAA,EAAa;AAC9BE,IAAAA,GAAG,CAAHA,GAAAA,CAAAA,SAAAA;AADFF,GAAAA;AAJF,CAAA;AASA;AACA;;;AACA,IAAI,OAAA,MAAA,KAAA,WAAA,IAAiCG,MAAM,CAA3C,GAAA,EAAiD;AAC/CF,EAAAA,OAAO,CAACE,MAAM,CAAdF,GAAO,CAAPA;AACD;;AACD,SACE;AADF,OAAA,EAAA,OAAA,EAAA,GAAA,EAAA,MAAA;AAOA,eAAe;AACbA,EAAAA,OAAO,EADM,OAAA;AAEbF,EAAAA,OAAO,EAAPA;AAFa,CAAf","sourcesContent":["/* eslint-disable */\n// This file is auto gererated by build/build-entry.js\nimport Btn from './Btn'\nimport Qrcode from './qrcode'\nconst version = '0.1.8'\n// 存储组件列表\nconst components = [\n  Btn,\n  Qrcode\n]\n// 定义 install 方法，接收 Vue 作为参数。如果使用 use 注册插件，则所有的组件都将被注册\nconst install = Vue => {\n  // 判断是否安装\n  if (install.installed) return\n  // 遍历注册全局组件\n  components.forEach(Component => {\n    Vue.use(Component)\n  })\n};\n\n/* istanbul ignore if */\n// 判断是否是直接script引入文件\nif (typeof window !== 'undefined' && window.Vue) {\n  install(window.Vue)\n}\nexport {\n  // 导出的对象必须具有 install，才能被 Vue.use() 方法安装\n  install,\n  version,\n  Btn,\n  Qrcode\n}\nexport default {\n  install,\n  version\n}\n"]}]}