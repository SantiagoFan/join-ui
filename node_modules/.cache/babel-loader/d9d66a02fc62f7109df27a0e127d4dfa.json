{"remainingRequest":"/media/santiago/projects/join-ui/node_modules/babel-loader/lib/index.js!/media/santiago/projects/join-ui/node_modules/babel-loader/lib/index.js!/media/santiago/projects/join-ui/node_modules/eslint-loader/index.js??ref--13-0!/media/santiago/projects/join-ui/examples/router/index.js","dependencies":[{"path":"/media/santiago/projects/join-ui/examples/router/index.js","mtime":1570614148803},{"path":"/media/santiago/projects/join-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport navConf from '@/nav.config.json';\nVue.use(Router);\nvar routes = [];\nObject.keys(navConf).forEach(function (header) {\n  routes = routes.concat(navConf[header]);\n});\n\nvar addComponent = function addComponent(router) {\n  router.forEach(function (route) {\n    if (route.items) {\n      addComponent(route.items);\n      routes = routes.concat(route.items);\n    } else {\n      if (route.name === 'site-index') {\n        route.component = function (r) {\n          return require.ensure([], function () {\n            return r(require(\"../docs/introduce.md\"));\n          });\n        };\n      } else {\n        route.component = function (r) {\n          return require.ensure([], function () {\n            return r(require(\"../docs/\".concat(route.name, \".md\")));\n          });\n        };\n      }\n    }\n  });\n};\n\naddComponent(routes);\nvar availableRoutes = routes.filter(function (item) {\n  return item.path;\n});\nexport default new Router({\n  routes: availableRoutes\n});",{"version":3,"sources":["/media/santiago/projects/join-ui/examples/router/index.js"],"names":["Vue","routes","Object","navConf","addComponent","router","route","r","require","availableRoutes","item"],"mappings":";;;;;;AAAA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,MAAA,MAAA,YAAA;AACA,OAAA,OAAA,MAAA,mBAAA;AAEAA,GAAG,CAAHA,GAAAA,CAAAA,MAAAA;AAEA,IAAIC,MAAM,GAAV,EAAA;AAEAC,MAAM,CAANA,IAAAA,CAAAA,OAAAA,EAAAA,OAAAA,CAA6B,UAAA,MAAA,EAAU;AACrCD,EAAAA,MAAM,GAAGA,MAAM,CAANA,MAAAA,CAAcE,OAAO,CAA9BF,MAA8B,CAArBA,CAATA;AADFC,CAAAA;;AAIA,IAAIE,YAAY,GAAG,SAAfA,YAAe,CAAA,MAAA,EAAU;AAC3BC,EAAAA,MAAM,CAANA,OAAAA,CAAe,UAAA,KAAA,EAAS;AACtB,QAAIC,KAAK,CAAT,KAAA,EAAiB;AACfF,MAAAA,YAAY,CAACE,KAAK,CAAlBF,KAAY,CAAZA;AACAH,MAAAA,MAAM,GAAGA,MAAM,CAANA,MAAAA,CAAcK,KAAK,CAA5BL,KAASA,CAATA;AAFF,KAAA,MAGO;AACL,UAAIK,KAAK,CAALA,IAAAA,KAAJ,YAAA,EAAiC;AAC/BA,QAAAA,KAAK,CAALA,SAAAA,GAAkB,UAAA,CAAA,EAAC;AAAA,iBACjB,OAAO,CAAP,MAAA,CAAA,EAAA,EAAmB,YAAA;AAAA,mBAAMC,CAAC,CAACC,OAAR,wBAAO,CAAP;AADF,WACjB,CADiB;AAAnBF,SAAAA;AADF,OAAA,MAGO;AACLA,QAAAA,KAAK,CAALA,SAAAA,GAAkB,UAAA,CAAA,EAAC;AAAA,iBACjB,OAAO,CAAP,MAAA,CAAA,EAAA,EAAmB,YAAA;AAAA,mBAAMC,CAAC,CAACC,OAAO,CAAA,WAAA,MAAA,CAAYF,KAAK,CAAjB,IAAA,EAAf,KAAe,CAAA,CAAR,CAAP;AADF,WACjB,CADiB;AAAnBA,SAAAA;AAED;AACF;AAZHD,GAAAA;AADF,CAAA;;AAgBAD,YAAY,CAAZA,MAAY,CAAZA;AACA,IAAIK,eAAe,GAAG,MAAM,CAAN,MAAA,CAAc,UAAA,IAAA,EAAI;AAAA,SAAIC,IAAI,CAAR,IAAA;AAAxC,CAAsB,CAAtB;AACA,eAAe,IAAA,MAAA,CAAW;AACxBT,EAAAA,MAAM,EAAEQ;AADgB,CAAX,CAAf","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\nimport navConf from '@/nav.config.json'\n\nVue.use(Router)\n\nlet routes = []\n\nObject.keys(navConf).forEach(header => {\n  routes = routes.concat(navConf[header])\n})\n\nlet addComponent = router => {\n  router.forEach(route => {\n    if (route.items) {\n      addComponent(route.items)\n      routes = routes.concat(route.items)\n    } else {\n      if (route.name === 'site-index') {\n        route.component = r =>\n          require.ensure([], () => r(require(`../docs/introduce.md`)))\n      } else {\n        route.component = r =>\n          require.ensure([], () => r(require(`../docs/${route.name}.md`)))\n      }\n    }\n  })\n}\naddComponent(routes)\nlet availableRoutes = routes.filter(item => item.path)\nexport default new Router({\n  routes: availableRoutes\n})"]}]}