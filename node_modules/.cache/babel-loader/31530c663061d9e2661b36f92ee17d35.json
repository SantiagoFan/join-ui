{"remainingRequest":"/media/santiago/projects/join-ui/node_modules/babel-loader/lib/index.js!/media/santiago/projects/join-ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/media/santiago/projects/join-ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/media/santiago/projects/join-ui/packages/sku/src/SkuTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/media/santiago/projects/join-ui/packages/sku/src/SkuTable.vue","mtime":1570507326728},{"path":"/media/santiago/projects/join-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/santiago/projects/join-ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/web.dom.iterable\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 笛卡尔集合\nfunction descartes(list) {\n  return Array.prototype.reduce.call(list, function (a, b) {\n    var ret = [];\n    a.forEach(function (a) {\n      b.forEach(function (b) {\n        ret.push(a.concat([b]));\n      });\n    });\n    return ret;\n  }, [[]]);\n}\n\nexport default {\n  name: 'SkuTable',\n  props: {\n    // 是否显示json\n    isShowCode: {\n      type: Boolean,\n      default: false\n    },\n    specification: {\n      // 规格\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    },\n    value: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      // 默认商品编号\n      defaultSkuNo: 'PRONO_',\n      // 批量设置相关\n      isSetListShow: true,\n      batchValue: '',\n      // 批量设置所绑定的值\n      currentType: '' // 要批量设置的类型\n\n    };\n  },\n  watch: {\n    specification: {\n      handler: function handler() {\n        this.bulidSKUS();\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    // 通过规格值计算sku 集合\n    bulidSKUS: function bulidSKUS() {\n      var _this = this,\n          _this$value;\n\n      var spValues = [];\n      this.specification.forEach(function (sp) {\n        if (sp.value.length > 0) spValues.push(sp.value);\n      });\n      var descar = descartes(spValues);\n      var netSKU = [];\n      descar.forEach(function (key) {\n        if (key.length === 0) return;\n\n        var oldSp = _this.getOldOrCreatData(JSON.stringify(key)); // 原数据存在则不重新赋值\n\n\n        netSKU.push(oldSp);\n      }); // 清空原有集合   待完善 做对比\n\n      this.value.length = 0;\n\n      (_this$value = this.value).push.apply(_this$value, netSKU);\n\n      this.$emit('update:value', netSKU);\n    },\n    // 通过属性组合键 查询原数据 如果原来数据存在则重新赋值 不存在则创建新数据\n    getOldOrCreatData: function getOldOrCreatData(spec_key) {\n      var data = {\n        ProductCost: 1,\n        ProductId: 0,\n        ProductNo: 1,\n        ProductPrice: 1,\n        ProductSpec: spec_key,\n        ProductStock: 999,\n        isUse: true\n      };\n      this.value.forEach(function (res) {\n        if (res.ProductSpec === spec_key) {\n          data = res;\n        }\n      });\n      return data;\n    },\n    // 获得属性值\n    getSpecValue: function getSpecValue(specIndex, index) {\n      // 获取当前规格项目下的属性值\n      var currentValues = this.specification[specIndex].value;\n      var indexCopy; // 判断是否是最后一个规格项目\n\n      if (this.specification[specIndex + 1] && this.specification[specIndex + 1].value.length) {\n        indexCopy = index / this.countSum(specIndex + 1);\n      } else {\n        indexCopy = index;\n      }\n\n      var i = Math.floor(indexCopy % currentValues.length);\n\n      if (i.toString() !== 'NaN') {\n        return currentValues[i];\n      } else {\n        return '';\n      }\n    },\n    // 根据规格索引  计算后面规格值值的数量 计算自身纵向跨度\n    countSum: function countSum(specIndex) {\n      var num = 1;\n      this.specification.forEach(function (item, index) {\n        if (index >= specIndex && item.value.length) {\n          num *= item.value.length;\n        }\n      });\n      return num;\n    },\n    // 根据传入的条件，来判断是否显示该td\n    showTd: function showTd(specIndex, index) {\n      // 如果当前项目下没有属性，则不显示\n      if (!this.specification[specIndex]) {\n        return false;\n      } else if (index % this.countSum(specIndex + 1) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    // 【 批处理相关 】\n    // 打开设置框\n    openBatch: function openBatch(type) {\n      this.currentType = type;\n      this.isSetListShow = false;\n    },\n    // 批量设置\n    setBatch: function setBatch() {\n      var _this2 = this;\n\n      if (typeof this.batchValue === 'string') {\n        this.$message({\n          type: 'warning',\n          message: '请输入正确的值'\n        });\n        return;\n      }\n\n      this.value.forEach(function (item) {\n        if (item.isUse) {\n          item[_this2.currentType] = _this2.batchValue;\n        }\n      });\n      this.cancelBatch();\n    },\n    // 取消批量设置\n    cancelBatch: function cancelBatch() {\n      this.batchValue = '';\n      this.currentType = '';\n      this.isSetListShow = true;\n    }\n  }\n};",{"version":3,"sources":["SkuTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"jui-sku-container\">\n    <div class=\"example\">\n      <table class=\"stock-table el-table el-table--border\" cellspacing=\"0\" cellpadding=\"0\">\n        <thead>\n          <tr>\n            <th\n              v-for=\"(sp, sp_index) in specification\"\n              :key=\"sp_index\"\n            >\n              {{ sp.name }}\n            </th>\n            <!-- <th>sku key</th> -->\n            <th style=\"width: 160px;\">销售价（元）</th>\n            <th style=\"width: 160px;\">库存</th>\n            <th style=\"width: 160px;\">规格编码</th>\n            <th style=\"width: 160px;\">成本价（元）</th>\n            <th style=\"width: 100px;\">是否启用</th>\n          </tr>\n        </thead>\n        <tbody v-if=\"value.length>0\">\n          <tr v-for=\"(item,index) in value\" :key=\"item.ProductSpec\">\n            <td\n              v-for=\"(sp, sp_index) in specification\"\n              v-if=\"showTd(sp_index, index)\"\n              :key=\"sp_index\"\n              :rowspan=\"countSum(sp_index+1)\"\n            >\n              {{ getSpecValue(sp_index, index) }}\n            </td>\n            <!-- <td>{{ item.ProductSpec }}</td> -->\n            <td>\n              <el-input-number\n                v-model.number=\"item.ProductPrice\"\n                size=\"small\"\n                :min=\"0\"\n                :precision=\"2\"\n                placeholder=\"输入销售价\"\n                :disabled=\"!item.isUse\"\n              >\n              </el-input-number>\n            </td>\n            <td>\n              <el-input-number\n                v-model.number=\"item.ProductStock\"\n                size=\"small\"\n                :min=\"0\"\n                :controls=\"false\"\n                :precision=\"0\"\n                placeholder=\"输入库存\"\n                :disabled=\"!item.isUse\"\n              >\n              </el-input-number>\n            </td>\n            <td>\n              <el-input\n                v-model=\"item.ProductNo\"\n                size=\"small\"\n                type=\"text\"\n                :disabled=\"!item.isUse\"\n                placeholder=\"输入商品规格编号\"\n              >\n              </el-input>\n            </td>\n            <td>\n              <el-input-number\n                v-model.number=\"item.ProductCost\"\n                size=\"small\"\n                :min=\"0\"\n                :precision=\"2\"\n                :disabled=\"!item.isUse\"\n              >\n              </el-input-number>\n            </td>\n            <td>\n              <el-switch v-model=\"item.isUse\"></el-switch>\n            </td>\n          </tr>\n          <tr>\n            <td colspan=\"8\" class=\"wh-foot\">\n              <span class=\"label\">批量设置：</span>\n              <ul v-if=\"isSetListShow\" class=\"set-list\">\n                <li class=\"set-item\" @click=\"openBatch('ProductPrice')\">销售价</li>\n                <li class=\"set-item\" @click=\"openBatch('ProductStock')\">库存</li>\n                <li class=\"set-item\" @click=\"openBatch('ProductCost')\">成本价</li>\n              </ul>\n              <div v-else class=\"set-form\">\n                <el-input-number v-model.number=\"batchValue\" :controls=\"false\" size=\"mini\" :min=\"0\" :precision=\"currentType=='ProductStock'?0:2\" placeholder=\"输入要设置的数量\"></el-input-number>\n                <i class=\"set-btn blue el-icon-check\" @click=\"setBatch\"></i>\n                <i class=\"set-btn red el-icon-close\" @click=\"cancelBatch\"></i>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div v-if=\"isShowCode\" class=\"example\">\n      <textarea class=\"code-area\" :value=\"JSON.stringify(value)\"></textarea>\n    </div>\n  </div>\n</template>\n\n<script>\n// 笛卡尔集合\nfunction descartes(list) {\n  return Array.prototype.reduce.call(list, function(a, b) {\n    var ret = []\n    a.forEach(function(a) {\n      b.forEach(function(b) {\n        ret.push(a.concat([b]))\n      })\n    })\n    return ret\n  }, [[]])\n}\n\nexport default {\n  name: 'SkuTable',\n  props: {\n    // 是否显示json\n    isShowCode: {\n      type: Boolean,\n      default: false\n    },\n\n    specification: { // 规格\n      type: Array,\n      default: function() { return [] }\n    },\n    value: {\n      type: Array,\n      default: function() { return [] }\n    }\n  },\n  data() {\n    return {\n      // 默认商品编号\n      defaultSkuNo: 'PRONO_',\n      // 批量设置相关\n      isSetListShow: true,\n      batchValue: '', // 批量设置所绑定的值\n      currentType: '' // 要批量设置的类型\n    }\n  },\n  watch: {\n    specification: {\n      handler() {\n        this.bulidSKUS()\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    // 通过规格值计算sku 集合\n    bulidSKUS() {\n      const spValues = []\n      this.specification.forEach(sp => {\n        if (sp.value.length > 0)spValues.push(sp.value)\n      })\n\n      const descar = descartes(spValues)\n\n      const netSKU = []\n      descar.forEach(key => {\n        if (key.length === 0) return\n        const oldSp = this.getOldOrCreatData(JSON.stringify(key)) // 原数据存在则不重新赋值\n        netSKU.push(oldSp)\n      })\n\n      // 清空原有集合   待完善 做对比\n      this.value.length = 0\n      this.value.push(...netSKU)\n      this.$emit('update:value', netSKU)\n    },\n    // 通过属性组合键 查询原数据 如果原来数据存在则重新赋值 不存在则创建新数据\n    getOldOrCreatData(spec_key) {\n      let data = {\n        ProductCost: 1,\n        ProductId: 0,\n        ProductNo: 1,\n        ProductPrice: 1,\n        ProductSpec: spec_key,\n        ProductStock: 999,\n        isUse: true\n      }\n      this.value.forEach(res => {\n        if (res.ProductSpec === spec_key) { data = res }\n      })\n      return data\n    },\n    // 获得属性值\n    getSpecValue(specIndex, index) {\n      // 获取当前规格项目下的属性值\n      const currentValues = this.specification[specIndex].value\n      let indexCopy\n\n      // 判断是否是最后一个规格项目\n      if (this.specification[specIndex + 1] && this.specification[specIndex + 1].value.length) {\n        indexCopy = index / this.countSum(specIndex + 1)\n      } else {\n        indexCopy = index\n      }\n\n      const i = Math.floor(indexCopy % currentValues.length)\n\n      if (i.toString() !== 'NaN') {\n        return currentValues[i]\n      } else {\n        return ''\n      }\n    },\n    // 根据规格索引  计算后面规格值值的数量 计算自身纵向跨度\n    countSum(specIndex) {\n      let num = 1\n      this.specification.forEach((item, index) => {\n        if (index >= specIndex && item.value.length) {\n          num *= item.value.length\n        }\n      })\n      return num\n    },\n    // 根据传入的条件，来判断是否显示该td\n    showTd(specIndex, index) {\n      // 如果当前项目下没有属性，则不显示\n      if (!this.specification[specIndex]) {\n        return false\n      } else if (index % this.countSum(specIndex + 1) === 0) {\n        return true\n      } else {\n        return false\n      }\n    },\n    // 【 批处理相关 】\n    // 打开设置框\n    openBatch(type) {\n      this.currentType = type\n      this.isSetListShow = false\n    },\n    // 批量设置\n    setBatch() {\n      if (typeof this.batchValue === 'string') {\n        this.$message({\n          type: 'warning',\n          message: '请输入正确的值'\n        })\n        return\n      }\n      this.value.forEach(item => {\n        if (item.isUse) {\n          item[this.currentType] = this.batchValue\n        }\n      })\n\n      this.cancelBatch()\n    },\n    // 取消批量设置\n    cancelBatch() {\n      this.batchValue = ''\n      this.currentType = ''\n      this.isSetListShow = true\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n\n.jui-sku-container {\n  .example {\n    .code-area {\n      width: 100%;\n      height: 300px;\n      padding: 20px;\n      line-height: 1.6;\n    }\n  }\n  .stock-table {\n    margin: 14px 0;\n    td,\n    th {\n      padding: 4px 10px;\n    }\n    th {\n      line-height: 30px;\n      background-color: #f3f6fb;\n    }\n    .link {\n      cursor: pointer;\n      color: #0088ee;\n      font-size: 13px;\n      margin-left: 6px;\n    }\n    .wh-foot {\n      line-height: 30px;\n      .label {\n        display: inline-block;\n        vertical-align: top;\n      }\n      .set-list {\n        display: inline-block;\n        vertical-align: top;\n        font-size: 0;\n        .set-item {\n          display: inline-block;\n          vertical-align: top;\n          margin-left: 15px;\n          font-size: 13px;\n          cursor: pointer;\n          color: #0088ee;\n        }\n      }\n      .set-form {\n        display: inline-block;\n        margin-left: 10px;\n        .el-input {\n          display: inline-block;\n          width: 120px;\n        }\n        .set-btn {\n          display: inline-block;\n          padding: 0 2px;\n          font-size: 15px;\n          cursor: pointer;\n          &.blue {\n            color: #0088ee;\n          }\n          &.red {\n            color: #cc0000;\n          }\n        }\n      }\n      .right {\n        float: right;\n      }\n      .text {\n        font-size: 13px;\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"packages/sku/src"}]}